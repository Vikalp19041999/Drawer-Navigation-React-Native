{"version":3,"sources":["BaseNavigationContainer.tsx"],"names":["React","CommonActions","EnsureSingleNavigator","NavigationBuilderContext","useFocusedListeners","useDevTools","useStateGetters","isSerializable","useEventEmitter","MISSING_CONTEXT_ERROR","NavigationStateContext","createContext","isDefault","getState","Error","setState","performTransaction","hasWarnedForSerialization","getPartialState","state","undefined","key","routeNames","partialState","stale","routes","map","route","BaseNavigationContainer","forwardRef","ref","initialState","onStateChange","independent","children","parent","useContext","setNavigationState","useState","navigationStateRef","useRef","transactionStateRef","isTransactionActiveRef","isFirstMountRef","skipTrackingRef","useCallback","callback","current","navigationState","reset","trackState","trackAction","name","listeners","addListener","addFocusedListener","getStateForRoute","addStateGetter","dispatch","action","navigation","canGoBack","result","handled","resetRoot","getRootState","emitter","useImperativeHandle","Object","keys","reduce","acc","create","builderContext","useMemo","context","useEffect","process","env","NODE_ENV","console","warn","emit","type","data"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  Route,\n  NavigationState,\n  InitialState,\n  PartialState,\n  NavigationAction,\n} from '@react-navigation/routers';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport useFocusedListeners from './useFocusedListeners';\nimport useDevTools from './useDevTools';\nimport useStateGetters from './useStateGetters';\nimport isSerializable from './isSerializable';\n\nimport { NavigationContainerRef, NavigationContainerProps } from './types';\nimport useEventEmitter from './useEventEmitter';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst MISSING_CONTEXT_ERROR =\n  \"We couldn't find a navigation context. Have you wrapped your app with 'NavigationContainer'? See https://reactnavigation.org/docs/en/getting-started.html for setup instructions.\";\n\nexport const NavigationStateContext = React.createContext<{\n  isDefault?: true;\n  state?: NavigationState | PartialState<NavigationState>;\n  getState: () => NavigationState | PartialState<NavigationState> | undefined;\n  setState: (\n    state: NavigationState | PartialState<NavigationState> | undefined\n  ) => void;\n  key?: string;\n  performTransaction: (action: () => void) => void;\n}>({\n  isDefault: true,\n\n  get getState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get performTransaction(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n\nlet hasWarnedForSerialization = false;\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  // @ts-ignore\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map(route => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref: React.Ref<NavigationContainerRef>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [state, setNavigationState] = React.useState<State>(() =>\n      getPartialState(initialState == null ? undefined : initialState)\n    );\n\n    const navigationStateRef = React.useRef<State>();\n    const transactionStateRef = React.useRef<State | null>(null);\n    const isTransactionActiveRef = React.useRef<boolean>(false);\n    const isFirstMountRef = React.useRef<boolean>(true);\n    const skipTrackingRef = React.useRef<boolean>(false);\n\n    const performTransaction = React.useCallback((callback: () => void) => {\n      if (isTransactionActiveRef.current) {\n        throw new Error(\n          \"Only one transaction can be active at a time. Did you accidentally nest 'performTransaction'?\"\n        );\n      }\n\n      setNavigationState((navigationState: State) => {\n        isTransactionActiveRef.current = true;\n        transactionStateRef.current = navigationState;\n\n        try {\n          callback();\n        } finally {\n          isTransactionActiveRef.current = false;\n        }\n\n        return transactionStateRef.current;\n      });\n    }, []);\n\n    const getState = React.useCallback(\n      () =>\n        transactionStateRef.current !== null\n          ? transactionStateRef.current\n          : navigationStateRef.current,\n      []\n    );\n\n    const setState = React.useCallback((navigationState: State) => {\n      if (transactionStateRef.current === null) {\n        throw new Error(\n          \"Any 'setState' calls need to be done inside 'performTransaction'\"\n        );\n      }\n\n      transactionStateRef.current = navigationState;\n    }, []);\n\n    const reset = React.useCallback(\n      (state: NavigationState) => {\n        performTransaction(() => {\n          skipTrackingRef.current = true;\n          setState(state);\n        });\n      },\n      [performTransaction, setState]\n    );\n\n    const { trackState, trackAction } = useDevTools({\n      name: '@react-navigation',\n      reset,\n      state,\n    });\n\n    const {\n      listeners,\n      addListener: addFocusedListener,\n    } = useFocusedListeners();\n\n    const { getStateForRoute, addStateGetter } = useStateGetters();\n\n    const dispatch = (\n      action: NavigationAction | ((state: NavigationState) => NavigationAction)\n    ) => {\n      listeners[0](navigation => navigation.dispatch(action));\n    };\n\n    const canGoBack = () => {\n      const { result, handled } = listeners[0](navigation =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    };\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        performTransaction(() => {\n          trackAction('@@RESET_ROOT');\n          setState(state);\n        });\n      },\n      [performTransaction, setState, trackAction]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return getStateForRoute('root');\n    }, [getStateForRoute]);\n\n    const emitter = useEventEmitter();\n\n    React.useImperativeHandle(ref, () => ({\n      ...(Object.keys(CommonActions) as (keyof typeof CommonActions)[]).reduce<\n        any\n      >((acc, name) => {\n        acc[name] = (...args: any[]) =>\n          dispatch(\n            CommonActions[name](\n              // @ts-ignore\n              ...args\n            )\n          );\n        return acc;\n      }, {}),\n      ...emitter.create('root'),\n      resetRoot,\n      dispatch,\n      canGoBack,\n      getRootState,\n    }));\n\n    const builderContext = React.useMemo(\n      () => ({\n        addFocusedListener,\n        addStateGetter,\n        trackAction,\n      }),\n      [addFocusedListener, trackAction, addStateGetter]\n    );\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        performTransaction,\n        getState,\n        setState,\n      }),\n      [getState, performTransaction, setState, state]\n    );\n\n    React.useEffect(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (\n          state !== undefined &&\n          !isSerializable(state) &&\n          !hasWarnedForSerialization\n        ) {\n          hasWarnedForSerialization = true;\n\n          console.warn(\n            \"We found non-serializable values in the navigation state, which can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/en/header-buttons.html#header-interaction-with-its-screen-component for docs.\"\n          );\n        }\n      }\n\n      emitter.emit({\n        type: 'state',\n        data: { state },\n      });\n\n      if (skipTrackingRef.current) {\n        skipTrackingRef.current = false;\n      } else {\n        trackState(getRootState);\n      }\n\n      navigationStateRef.current = state;\n      transactionStateRef.current = null;\n\n      if (!isFirstMountRef.current && onStateChange) {\n        onStateChange(getRootState());\n      }\n\n      isFirstMountRef.current = false;\n    }, [state, onStateChange, trackState, getRootState, emitter]);\n\n    return (\n      <NavigationBuilderContext.Provider value={builderContext}>\n        <NavigationStateContext.Provider value={context}>\n          <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n        </NavigationStateContext.Provider>\n      </NavigationBuilderContext.Provider>\n    );\n  }\n);\n\nexport default BaseNavigationContainer;\n"]}