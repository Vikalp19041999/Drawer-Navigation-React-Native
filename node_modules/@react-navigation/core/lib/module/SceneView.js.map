{"version":3,"sources":["SceneView.tsx"],"names":["React","NavigationStateContext","NavigationContext","NavigationRouteContext","StaticContainer","EnsureSingleNavigator","SceneView","screen","route","navigation","getState","setState","performTransaction","useContext","getCurrentState","useCallback","state","currentRoute","routes","find","r","key","undefined","setCurrentState","child","map","context","useMemo","name","component","children"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Route,\n  ParamListBase,\n  NavigationState,\n  PartialState,\n} from '@react-navigation/routers';\nimport { NavigationStateContext } from './BaseNavigationContainer';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport StaticContainer from './StaticContainer';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport { NavigationProp, RouteConfig } from './types';\n\ntype Props<State extends NavigationState, ScreenOptions extends object> = {\n  screen: RouteConfig<ParamListBase, string, ScreenOptions>;\n  navigation: NavigationProp<ParamListBase, string, State, ScreenOptions>;\n  route: Route<string> & {\n    state?: NavigationState | PartialState<NavigationState>;\n  };\n  getState: () => State;\n  setState: (state: State) => void;\n};\n\n/**\n * Component which takes care of rendering the screen for a route.\n * It provides all required contexts and applies optimizations when applicable.\n */\nexport default function SceneView<\n  State extends NavigationState,\n  ScreenOptions extends object\n>({\n  screen,\n  route,\n  navigation,\n  getState,\n  setState,\n}: Props<State, ScreenOptions>) {\n  const { performTransaction } = React.useContext(NavigationStateContext);\n\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find(r => r.key === route.key);\n\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n\n  const setCurrentState = React.useCallback(\n    (child: NavigationState | PartialState<NavigationState> | undefined) => {\n      const state = getState();\n\n      setState({\n        ...state,\n        routes: state.routes.map(r =>\n          r.key === route.key ? { ...r, state: child } : r\n        ),\n      });\n    },\n    [getState, route.key, setState]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      state: route.state,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      performTransaction,\n      key: route.key,\n    }),\n    [\n      getCurrentState,\n      performTransaction,\n      route.key,\n      route.state,\n      setCurrentState,\n    ]\n  );\n\n  return (\n    <NavigationContext.Provider value={navigation}>\n      <NavigationRouteContext.Provider value={route}>\n        <NavigationStateContext.Provider value={context}>\n          <EnsureSingleNavigator>\n            <StaticContainer\n              name={screen.name}\n              // @ts-ignore\n              render={screen.component || screen.children}\n              navigation={navigation}\n              route={route}\n            >\n              {'component' in screen && screen.component !== undefined ? (\n                // @ts-ignore\n                <screen.component navigation={navigation} route={route} />\n              ) : 'children' in screen && screen.children !== undefined ? (\n                // @ts-ignore\n                screen.children({ navigation, route })\n              ) : null}\n            </StaticContainer>\n          </EnsureSingleNavigator>\n        </NavigationStateContext.Provider>\n      </NavigationRouteContext.Provider>\n    </NavigationContext.Provider>\n  );\n}\n"]}